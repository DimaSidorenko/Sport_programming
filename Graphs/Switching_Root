#include <iostream>
#include <fstream>
#include <map>
#include <unordered_map>
#include <set>
#include <string>
#include <algorithm>
#include <sstream>
#include <assert.h>
#include <bitset>
#include <iomanip>
#include <vector>
#include <queue>
#include <random>


#pragma warning(disable : 4996)
#define en "\n"
#define for0(i, n) for(int i = 0; i < n; i++)
#define all(x) (x).begin(), (x).end()
#define pb push_back
#define pii pair<int,int>
#define pll pair<ll,ll>

typedef long long ll;
typedef long double ld;


using namespace std;

template<typename T> void print(vector<T> & a)
{
	for (int i = 0; i < a.size(); i++)
		cout << a[i] << ' ';
	cout << en;
}

template<typename T> void print(deque<T> & a)
{
	for (int i = 0; i < a.size(); i++)
		cout << a[i] << ' ';
	cout << en;
}

template<typename T> void print(vector<vector<T>> & a)
{
	for (int i = 0; i < a.size(); i++)
	{
		for (int j = 0; j < a[i].size(); j++)
			cout << a[i][j] << ' ';
		cout << en;
	}
}

template <typename T> void input(vector<T> & a)
{
	for (int i = 0; i < a.size(); i++)
		cin >> a[i];
}

template<typename T> void input(deque<T> & a)
{
	for (int i = 0; i < a.size(); i++)
		cin >> a[i];
}

template<typename T> void input(vector<vector<T>> & a)
{
	for (int i = 0; i < a.size(); i++)
		for (int j = 0; j < a[i].size(); j++)
			cin >> a[i][j];
}


int gcd(int a, int b) {
	return b ? gcd(b, a % b) : a;
}

const ll INF = 1e9;
const int NMAX = 2e5 + 10;


int color[NMAX];
vector<int> g[NMAX];
ll dp[NMAX];


ll dfs1(int v, int p) {

	dp[v] = color[v];

	for (auto to : g[v]) {
		if (to != p) {
			dp[v] += max(ll(0), dfs1(to, v));
		}
	}

	return dp[v];
}

ll ans[NMAX];

void dfs2(int v, int p) {
	
	if (p != -1) {
		dp[p] -= max(ll(0), dp[v]);

		dp[v] += max(ll(0), dp[p]);

	}
	ans[v] = dp[v];

	for (auto to : g[v]) {
		if (to != p) {
			dfs2(to, v);
		}
	}
	
	if (p != -1) {
		dp[v] -= max(ll(0), dp[p]);

		dp[p] += max(ll(0), dp[v]);
	}

}




void solve() {
	int n;
	cin >> n;
	
	for0(i, n) {
		cin >> color[i + 1];
		if (color[i + 1] == 0)
			color[i + 1] = -1;
	}

	for0(i, n - 1) {
		int u, v;
		cin >> u;
		cin >> v;
		g[u].pb(v);
		g[v].pb(u);
	}
	dfs1(1, -1);
	dfs2(1, -1);

	for (int i = 1; i <= n; i++) {
		cout << ans[i] << " ";
	}

}
	

int main() {
	srand(time(0));
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
#ifdef _DEBUG
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
#endif
	/*int t;
	cin >> t;
	while (t--)*/
		solve();
}
